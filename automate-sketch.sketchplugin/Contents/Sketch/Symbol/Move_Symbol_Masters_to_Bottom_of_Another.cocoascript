/*----------------------------------------------------------

Author: Ashung Hung
Homepage: https://github.com/Ashung/Automate-Sketch
License: https://creativecommons.org/licenses/by-sa/4.0

----------------------------------------------------------*/

var onRun = function(context) {

    var doc = context.document;
    var selection = context.selection;
    var page = doc.currentPage();

    // Filter symbol master from all selection
    var selectedSymbolMasters = [];
    var selectedSymbolMastersIDs = [];
    for (var i = 0; i < selection.count(); i++) {
        var layer = selection.objectAtIndex(i);
        if (layer.class() == "MSSymbolMaster") {
            selectedSymbolMasters.push(layer);
            selectedSymbolMastersIDs.push(String(layer.symbolID()));
        }
    }

    if (selectedSymbolMastersIDs.length > 0) {

        // Get all symbol masters, that show in select box.
        var symbolMasters = [];
        var symbolMastersNames = [];
        for (var i = page.children().count(); i > 0; i --) {
            var layer = page.children().objectAtIndex(i - 1);
            if (layer.class() == "MSSymbolMaster") {
                if (selectedSymbolMastersIDs.indexOf(String(layer.symbolID())) == -1) {
                    symbolMasters.push(layer);
                    symbolMastersNames.push(layer.name());
                }
            }
        }

        // Dialog
        var dialog = COSAlertWindow.new();
        dialog.setMessageText("Move seleted symbol masters to the bottom of ...");

        var select = NSComboBox.alloc().initWithFrame(NSMakeRect(0, 0, 240, 28));
        select.addItemsWithObjectValues(symbolMastersNames);
        select.selectItemAtIndex(0);
        dialog.addAccessoryView(select);
        // TODO: When NSComboBox changed, show the symbol master

        dialog.addTextLabelWithValue("Space between 2 symbol masters:");

        var textField = NSTextField.alloc().initWithFrame(NSMakeRect(0, 0, 100, 24));
        textField.setStringValue("50");
        dialog.addAccessoryView(textField);

        dialog.addButtonWithTitle("OK");
        dialog.addButtonWithTitle("Cancel");

        var responseCode = dialog.runModal();
        if (responseCode == "1000") {
            var target = symbolMasters[select.indexOfSelectedItem()];
            var space = parseInt(textField.stringValue());
            var positionX = target.frame().x();
            var positionY = target.frame().maxY() + space;
            for (var i = 0; i < selectedSymbolMasters.length; i++) {
                var symbol = selectedSymbolMasters[i];
                if (i > 0) {
                    positionY = positionY + symbol.frame().height() + space;
                }
                symbol.frame().setX(positionX);
                symbol.frame().setY(positionY);
            }
        }

        page.deselectAllLayers();
        for (var i = 0; i < selectedSymbolMasters.length; i++) {
            var symbol = selectedSymbolMasters[i];
            symbol.select_byExpandingSelection(true, true);
        }

        // View - Center Selection
        doc.currentView().centerSelectionInVisibleArea();

    } else {
        doc.showMessage("Please select at least one symbol master.");
    }

};
