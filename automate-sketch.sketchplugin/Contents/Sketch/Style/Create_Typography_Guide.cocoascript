/*----------------------------------------------------------

Author: Ashung Hung
Homepage: https://github.com/Ashung/Automate-Sketch
License: https://creativecommons.org/licenses/by-sa/4.0

----------------------------------------------------------*/

@import "../Utilities/Preferences.cocoascript";

var onRun = function(context) {

    var document = context.document;
    var page = document.currentPage();

    var textStyles = document.documentData().layerTextStylesGeneric().objects();

    if (textStyles.count() > 0) {

        // Dialog
        var dialog = COSAlertWindow.new();
        dialog.setMessageText("Create Typography Guide");
        dialog.setInformativeText("Create typography guide from document text styles. \n\nIf your want to use style name as preview text, leave the option blank.")

        dialog.addTextLabelWithValue("Preview Text:");
        var textField = NSTextField.alloc().initWithFrame(NSMakeRect(0, 0, 300, 24));
        textField.setStringValue(getPreferences("previewText") || "");
        dialog.addAccessoryView(textField);

        dialog.addButtonWithTitle("OK");
        dialog.addButtonWithTitle("Cancel");

        var responseCode = dialog.runModal();
        if (responseCode == "1000") {

            var typographyPositionX = page.originForNewArtboard().x,
                typographyPositionY = page.originForNewArtboard().y,
                spaceBetweenTypographys = 32,
                spaceBetweenTypographyAndText = 8,
                textHeight = 16,
                textFontSize = 14,
                textColor = MSColor.colorWithRed_green_blue_alpha(153/255, 153/255, 153/255, 1),
                textFontName = "HelveticaNeue";

            var previewText = textField.stringValue();
            setPreferences("previewText", previewText);

            var loopTextStyles = textStyles.objectEnumerator();
            var textStyle;
            while (textStyle = loopTextStyles.nextObject()) {

                // Add layer group
                var typographyGroup = MSLayerGroup.alloc().init();
                typographyGroup.setName("style");
                typographyGroup.setRect(CGRectMake(typographyPositionX, typographyPositionY, 100, 10));
                page.addLayers([typographyGroup]);

                // Add typography layer
                var typography = MSTextLayer.alloc().init();
                typography.setName("preview");
                if (previewText == "") {
                    typography.setStringValue(textStyle.name().replace(/^.*(\/)/i, ""));
                } else {
                    typography.setStringValue(previewText);
                }
                typography.setStyle(textStyle.style());
                typography.frame().setX(0);
                typography.frame().setY(0);
                typographyGroup.addLayers([typography]);

                // Add text layer
                var text = MSTextLayer.alloc().init();
                text.setStringValue(textStyle.name());
                text.setLineHeight(textHeight);
                text.setFontPostscriptName(textFontName);
                text.setTextColor(textColor);
                text.setFontSize(textFontSize);
                text.setName("label");
                text.frame().setX(0);
                text.frame().setY(typography.frame().height() + spaceBetweenTypographyAndText);
                typographyGroup.insertLayers_beforeLayer([text], typography);

                typographyGroup.resizeToFitChildrenWithOption(1);
                typographyPositionY = typographyPositionY + spaceBetweenTypographys + typographyGroup.frame().height();

            }

        }

    } else {
        document.showMessage("No any text style in current document.");
    }

}
